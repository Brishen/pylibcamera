Subject: [PATCH] fix libcamera
---
Index: src/py/libcamera/py_helpers.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/py/libcamera/py_helpers.cpp b/src/py/libcamera/py_helpers.cpp
--- a/src/py/libcamera/py_helpers.cpp	(revision d83ff0a4ae4503bc56b7ed48cd142c3dd423ad3b)
+++ b/src/py/libcamera/py_helpers.cpp	(date 1750558946222)
@@ -25,7 +25,7 @@
 		for (size_t i = 0; i < cv.numElements(); ++i)
 			t[i] = v[i];
 
-		return std::move(t);
+		return t;
 	}
 
 	return py::cast(cv.get<T>());
Index: src/py/libcamera/meson.build
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/py/libcamera/meson.build b/src/py/libcamera/meson.build
--- a/src/py/libcamera/meson.build	(revision d83ff0a4ae4503bc56b7ed48cd142c3dd423ad3b)
+++ b/src/py/libcamera/meson.build	(date 1750558946198)
@@ -1,6 +1,8 @@
 # SPDX-License-Identifier: CC0-1.0
 
-py3_dep = dependency('python3', required : get_option('pycamera'))
+
+py = import('python').find_installation('python3', required : get_option('pycamera'))
+py3_dep = py.dependency(required : get_option('pycamera'))
 
 if not py3_dep.found()
     pycamera_enabled = false
@@ -69,7 +71,9 @@
     '-fvisibility=hidden',
     '-Wno-shadow',
     '-DPYBIND11_USE_SMART_HOLDER_AS_DEFAULT',
+    '-DLIBCAMERA_BASE_PRIVATE',
 ]
+subdir_done()
 
 destdir = get_option('libdir') / ('python' + py3_dep.version()) / 'site-packages' / 'libcamera'
 
@@ -85,18 +89,23 @@
 # Create symlinks from the build dir to the source dir so that we can use the
 # Python module directly from the build dir.
 
-run_command('ln', '-fsrT', files('__init__.py'),
-            meson.current_build_dir() / '__init__.py',
-            check : true)
+#run_command('ln', '-fsrT', files('__init__.py'),
+#            meson.current_build_dir() / '__init__.py',
+#            check : true)
 
-run_command('ln', '-fsrT', meson.current_source_dir() / 'utils',
-            meson.current_build_dir() / 'utils',
-            check : true)
+#run_command('ln', '-fsrT', meson.current_source_dir() / 'utils',
+#            meson.current_build_dir() / 'utils',
+#            check : true)
 
 install_data(['__init__.py'],
              install_dir : destdir,
              install_tag : 'python-runtime')
 
+install_subdir(
+  'utils',
+  install_dir : destdir / 'utils',
+  install_tag : 'python-runtime'
+)
 # \todo Generate stubs when building. See https://peps.python.org/pep-0484/#stub-files
 # Note: Depends on pybind11-stubgen. To generate pylibcamera stubs:
 # $ PYTHONPATH=build/src/py pybind11-stubgen --no-setup-py -o build/src/py libcamera
